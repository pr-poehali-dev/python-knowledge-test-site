import { Question } from "@/types/quiz";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Button } from "@/components/ui/button";
import { Progress } from "@/components/ui/progress";

interface ResultsScreenProps {
  questions: Question[];
  answers: number[];
  score: number;
  timeSpent: number;
  onRestart: () => void;
}

const ResultsScreen = ({
  questions,
  answers,
  score,
  timeSpent,
  onRestart,
}: ResultsScreenProps) => {
  const percentage = Math.round((score / questions.length) * 100);

  const getGradeEmoji = (percentage: number) => {
    if (percentage >= 90) return "üèÜ";
    if (percentage >= 80) return "ü•á";
    if (percentage >= 70) return "ü•à";
    if (percentage >= 60) return "ü•â";
    return "üìö";
  };

  const getGradeText = (percentage: number) => {
    if (percentage >= 90) return "–û—Ç–ª–∏—á–Ω–æ! –í—ã —ç–∫—Å–ø–µ—Ä—Ç Python!";
    if (percentage >= 80) return "–û—á–µ–Ω—å —Ö–æ—Ä–æ—à–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –∏–∑—É—á–∞—Ç—å!";
    if (percentage >= 70) return "–•–æ—Ä–æ—à–æ! –ï—Å—Ç—å —á—Ç–æ —É–ª—É—á—à–∏—Ç—å.";
    if (percentage >= 60) return "–ù–µ–ø–ª–æ—Ö–æ! –ù—É–∂–Ω–æ –±–æ–ª—å—à–µ –ø—Ä–∞–∫—Ç–∏–∫–∏.";
    return "–ù–∞—á–Ω–∏—Ç–µ —Å –æ—Å–Ω–æ–≤ Python.";
  };

  const formatTime = (seconds: number) => {
    const mins = Math.floor(seconds / 60);
    const secs = seconds % 60;
    return mins > 0 ? `${mins}–º ${secs}—Å` : `${secs}—Å`;
  };

  return (
    <div className="w-full max-w-4xl mx-auto space-y-6 animate-fade-in">
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã */}
      <Card className="text-center">
        <CardHeader>
          <div className="text-6xl mb-4">{getGradeEmoji(percentage)}</div>
          <CardTitle className="text-3xl font-roboto mb-2">
            –¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω!
          </CardTitle>
          <p className="text-xl text-gray-600">{getGradeText(percentage)}</p>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
            <div className="bg-blue-50 p-4 rounded-lg">
              <div className="text-2xl font-bold text-blue-600">
                {score}/{questions.length}
              </div>
              <div className="text-sm text-gray-600">–ü—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤</div>
            </div>
            <div className="bg-green-50 p-4 rounded-lg">
              <div className="text-2xl font-bold text-green-600">
                {percentage}%
              </div>
              <div className="text-sm text-gray-600">–ü—Ä–æ—Ü–µ–Ω—Ç —É—Å–ø–µ—Ö–∞</div>
            </div>
            <div className="bg-purple-50 p-4 rounded-lg">
              <div className="text-2xl font-bold text-purple-600">
                {formatTime(timeSpent)}
              </div>
              <div className="text-sm text-gray-600">–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è</div>
            </div>
          </div>

          <Progress value={percentage} className="mb-6" />

          <Button
            onClick={onRestart}
            size="lg"
            className="bg-blue-600 hover:bg-blue-700"
          >
            üîÑ –ü—Ä–æ–π—Ç–∏ —Ç–µ—Å—Ç –µ—â–µ —Ä–∞–∑
          </Button>
        </CardContent>
      </Card>

      {/* –î–µ—Ç–∞–ª—å–Ω—ã–π —Ä–∞–∑–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤ */}
      <Card>
        <CardHeader>
          <CardTitle className="text-xl font-roboto">
            üìù –†–∞–∑–±–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤
          </CardTitle>
        </CardHeader>
        <CardContent>
          <div className="space-y-4">
            {questions.map((question, index) => {
              const userAnswer = answers[index];
              const isCorrect = userAnswer === question.correctAnswer;

              return (
                <div
                  key={question.id}
                  className={`p-4 rounded-lg border ${
                    isCorrect
                      ? "bg-green-50 border-green-200"
                      : "bg-red-50 border-red-200"
                  }`}
                >
                  <div className="flex items-start gap-3">
                    <div className="text-2xl">{isCorrect ? "‚úÖ" : "‚ùå"}</div>
                    <div className="flex-1">
                      <div className="font-medium mb-2">
                        {index + 1}. {question.question}
                      </div>
                      <div className="text-sm space-y-1">
                        <div>
                          <span className="font-medium">–í–∞—à –æ—Ç–≤–µ—Ç:</span>{" "}
                          {question.options[userAnswer]}
                        </div>
                        {!isCorrect && (
                          <div>
                            <span className="font-medium text-green-600">
                              –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç:
                            </span>{" "}
                            {question.options[question.correctAnswer]}
                          </div>
                        )}
                        <div className="text-gray-600 mt-2">
                          üí° {question.explanation}
                        </div>
                      </div>
                    </div>
                  </div>
                </div>
              );
            })}
          </div>
        </CardContent>
      </Card>
    </div>
  );
};

export default ResultsScreen;
